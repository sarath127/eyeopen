/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eyeopen;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import net.proteanit.sql.DbUtils;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author sarath kumar
 */
public class Form1 extends javax.swing.JFrame {
    ResultSet rst=null;
        PreparedStatement pst=null;
    private String ImgPath;
    public Form1() {
        initComponents();
        update_table();
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter()
		{
                        @Override
			public void windowClosing(WindowEvent a)
			{
				if(JOptionPane.showConfirmDialog(null,"Are You Sure You Want to Exit?","Confirm",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
				System.exit(0);
			}
		});
    }
    String Imgpath = null;
         int pos = 0;
         public ImageIcon ResizeImage(String imagePath, byte[] pic)
    {
        ImageIcon myImage = null;
        
        if(imagePath != null)
        {
            myImage = new ImageIcon(imagePath);
        }else{
            myImage = new ImageIcon(pic);
        }
        
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(lbl_image.getWidth(), lbl_image.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
        
    }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("nss?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        masterQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Master m");
        masterList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : masterQuery.getResultList();
        l_name = new javax.swing.JLabel();
        l_id = new javax.swing.JLabel();
        l_department = new javax.swing.JLabel();
        l_year = new javax.swing.JLabel();
        l_section = new javax.swing.JLabel();
        c_id = new javax.swing.JTextField();
        c_name = new javax.swing.JTextField();
        c_department = new javax.swing.JComboBox<>();
        c_section = new javax.swing.JComboBox<>();
        c_year = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        c_joined = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbl_image = new javax.swing.JLabel();
        b_insert = new javax.swing.JButton();
        choose = new javax.swing.JButton();
        b_reset = new javax.swing.JButton();
        b_update = new javax.swing.JButton();
        b_delete = new javax.swing.JButton();
        b_logout = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        candidate_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin page\n");
        setBackground(new java.awt.Color(51, 0, 255));
        setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        setForeground(new java.awt.Color(102, 102, 255));
        setLocation(new java.awt.Point(15, 15));

        l_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l_name.setText("Name");

        l_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l_id.setText("ID");

        l_department.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l_department.setText("Department");

        l_year.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l_year.setText("Year");

        l_section.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l_section.setText("Section");

        c_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_id.setToolTipText("");

        c_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_name.setToolTipText("enter candidate name");
        c_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_nameActionPerformed(evt);
            }
        });

        c_department.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IT", "CSE", "MECH", "CIVIL", "EIE", "ECE", "EEE", "AUTO", " " }));
        c_department.setToolTipText("enter department\n");

        c_section.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_section.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        c_section.setToolTipText("enter section");

        c_year.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIRST", "SECOND", "THIRD", "FOURTH" }));
        c_year.setToolTipText("enter year");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Add date");

        c_joined.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_joined.setToolTipText("enter joined date");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("upload_image");

        lbl_image.setBackground(new java.awt.Color(153, 153, 255));
        lbl_image.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_image.setForeground(new java.awt.Color(255, 255, 51));
        lbl_image.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(51, 51, 255)));

        b_insert.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_insert.setForeground(new java.awt.Color(51, 51, 255));
        b_insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nss/icons/add.png"))); // NOI18N
        b_insert.setText("Insert");
        b_insert.setToolTipText("insert data");
        b_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_insertActionPerformed(evt);
            }
        });

        choose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        choose.setText("Upload");
        choose.setToolTipText("upload image");
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });

        b_reset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_reset.setForeground(new java.awt.Color(102, 102, 255));
        b_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nss/icons/Refresh.png"))); // NOI18N
        b_reset.setText("reset");
        b_reset.setToolTipText("reset data\n");
        b_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_resetActionPerformed(evt);
            }
        });

        b_update.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_update.setForeground(new java.awt.Color(51, 51, 255));
        b_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nss/icons/Renew.png"))); // NOI18N
        b_update.setText("Update");
        b_update.setToolTipText("update data");
        b_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updateActionPerformed(evt);
            }
        });

        b_delete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_delete.setForeground(new java.awt.Color(51, 51, 255));
        b_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nss/icons/delete.png"))); // NOI18N
        b_delete.setText("Delete");
        b_delete.setToolTipText("delete data");
        b_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_deleteActionPerformed(evt);
            }
        });

        b_logout.setText("logout");
        b_logout.setToolTipText("logout");
        b_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_logoutActionPerformed(evt);
            }
        });

        candidate_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        candidate_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                candidate_tableMouseClicked(evt);
            }
        });
        candidate_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                candidate_tableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(candidate_table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_insert)
                        .addGap(18, 18, 18)
                        .addComponent(b_update)
                        .addGap(4, 4, 4)
                        .addComponent(b_delete)
                        .addGap(18, 18, 18)
                        .addComponent(b_reset)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_logout)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_id)
                                    .addComponent(l_name)
                                    .addComponent(l_department)
                                    .addComponent(l_section)
                                    .addComponent(l_year)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(c_name)
                                    .addComponent(c_id)
                                    .addComponent(c_department, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(c_section, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(c_year, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(c_joined)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(choose)
                                        .addGap(38, 38, 38)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_logout)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_id)
                            .addComponent(c_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_name)
                            .addComponent(c_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_department)
                            .addComponent(c_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_section)
                            .addComponent(c_section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_year)
                            .addComponent(c_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(c_joined, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lbl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addComponent(choose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_insert)
                    .addComponent(b_reset)
                    .addComponent(b_update)
                    .addComponent(b_delete))
                .addGap(119, 119, 119))
        );

        setBounds(0, 0, 1287, 743);
    }// </editor-fold>//GEN-END:initComponents
 public boolean checkInputs()
        
    {
        return !(c_name.getText() == null || c_joined.getText()== null);
    }
    private void c_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_nameActionPerformed
                                                                                                                           //INSERT RECORD
    private void b_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_insertActionPerformed
         if(checkInputs() && ImgPath != null)
        {
            try {
                 Connection con = Connect.ConnectDB();
                 String value1=c_department.getSelectedItem().toString();
                 String value2=c_section.getSelectedItem().toString();
                 String value3=c_year.getSelectedItem().toString();
                PreparedStatement ps = con.prepareStatement("INSERT INTO master(name,department,sec,year,date_of_join,image)"
                        + "values(?,?,?,?,?,?) ");
                //ps.setString(1, c_id.getText());
                ps.setString(1, c_name.getText());
                ps.setString(2, value1);
                ps.setString(3, value2);
                ps.setString(4, value3);
                ps.setString(5,c_joined.getText());
                InputStream img = new FileInputStream(new File(ImgPath));
                ps.setBlob(6, img);
                ps.executeUpdate();
               update_table();
                
                JOptionPane.showMessageDialog(null, "Data Inserted");
            } catch (SQLException | FileNotFoundException | HeadlessException ex) {
                 JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(null, "One Or More Field Are Empty");
        }
        
        System.out.println("Name => "+c_name.getText());
        System.out.println("Image => "+ImgPath);   
    }//GEN-LAST:event_b_insertActionPerformed
//RESET FIELDS
    private void b_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_resetActionPerformed
        c_id.setText("");
        c_name.setText("");
        c_department.setSelectedIndex(0);
        c_section.setSelectedIndex(0);
        c_year.setSelectedIndex(0);
        c_joined.setText("");
        lbl_image.setIcon(null);
        
    }//GEN-LAST:event_b_resetActionPerformed

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images", "jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lbl_image.setIcon(ResizeImage(path, null));
              ImgPath = path;
        }
        else{
            System.out.println("No File Selected");
        }        

    }//GEN-LAST:event_chooseActionPerformed

    private void b_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updateActionPerformed
          if(checkInputs() && c_id.getText() != null)
        {
            String UpdateQuery;
            PreparedStatement ps;
            Connection con = Connect.ConnectDB();
            
            // update without image
            if(ImgPath == null)
            {
                try {
                    UpdateQuery = "UPDATE master SET name = ?, department = ? , sec =? ,year = ?" 
                            + ", date_of_join = ? WHERE id = ?";
                    ps = con.prepareStatement(UpdateQuery);
                    String value1=c_department.getSelectedItem().toString();
                    String value2=c_section.getSelectedItem().toString();
                    String value3=c_year.getSelectedItem().toString();
                    ps.setString(1, c_name.getText());
                    ps.setString(2, value1);
                    ps.setString(3, value2);
                    ps.setString(4, value3);
                    ps.setString(5,c_joined.getText());
                    ps.setString(6,c_id.getText());               
                    ps.executeUpdate();
                 update_table();
                    JOptionPane.showMessageDialog(null, "candidate Updated");
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            // update With Image
            else{
                try{
                InputStream img;
                    img = new FileInputStream(new File(ImgPath));
                
                 UpdateQuery = "UPDATE master SET name = ?, department = ? , sec =? ,year = ?"
                            + ", add_date = ?, image = ? WHERE id = ?";
                 
                  ps = con.prepareStatement(UpdateQuery);
                    
                    String value1=c_department.getSelectedItem().toString();
                    String value2=c_section.getSelectedItem().toString();
                    String value3=c_year.getSelectedItem().toString();
                    
                    ps.setString(1, c_name.getText());
                    ps.setString(2, value1);
                    ps.setString(3, value2);
                    ps.setString(4, value3);
                    ps.setString(5,c_joined.getText());                    
                    ps.setBlob(6, img);                    
                    ps.executeUpdate();
                   update_table();
                    JOptionPane.showMessageDialog(null, "candidate Updated");
                
                }catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty Or Wrong");
        }
    }//GEN-LAST:event_b_updateActionPerformed

    
    
    //DELETE RECORED
    private void b_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_deleteActionPerformed
        int p=JOptionPane.showConfirmDialog(null,"do you really want to delete" ,"Delete",JOptionPane.YES_NO_OPTION);
        if(p==0)
        {
        if(!c_id.getText().equals(""))
        {
            try {
               Connection con = Connect.ConnectDB();
                PreparedStatement ps = con.prepareStatement("DELETE FROM master WHERE id = ?");
                int id = Integer.parseInt(c_id.getText());
                ps.setInt(1, id);
                ps.executeUpdate(); 
               update_table();
                JOptionPane.showMessageDialog(null, "candidate Deleted");
            } catch (SQLException ex) {
                Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "candidate Not Deleted");
            }
           
        }else{
            JOptionPane.showMessageDialog(null, "Product Not Deleted : No Id To Delete");
        }
        }
    }//GEN-LAST:event_b_deleteActionPerformed

    private void b_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_logoutActionPerformed
         this.hide();
             Login frm=new Login();
             frm.setVisible(true);
    }//GEN-LAST:event_b_logoutActionPerformed

    private void candidate_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_candidate_tableMouseClicked
        try{
            int row =candidate_table.getSelectedRow();
            String t=(candidate_table.getModel().getValueAt(row,0).toString());
            String s="select * from master where id="+t ;
            Connection con = Connect.ConnectDB();
            pst = con.prepareStatement(s);
            rst=pst.executeQuery();
            if(rst.next())
            {
                String a=rst.getString("id");
                c_id.setText(a);
                String b=rst.getString("department");
                c_department.setSelectedItem(b);
                String c=rst.getString("sec");
                c_section.setSelectedItem(c);
                String d=rst.getString("year");
                c_year.setSelectedItem(d);
                String e=rst.getString("name");
                c_name.setText(e);
                String f=rst.getString("date_of_join");
                c_joined.setText(f);
               byte [] img =rst.getBytes("image");
               ImageIcon image=new ImageIcon (img);
               Image im=image.getImage();
               Image img2=im.getScaledInstance(lbl_image.getWidth(),lbl_image.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon img3=new ImageIcon (img2);
               lbl_image.setIcon(img3);
           
                
            }
        }
        catch(Exception ex)
        {
            
        }
    }//GEN-LAST:event_candidate_tableMouseClicked

    private void candidate_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_candidate_tableKeyPressed
        if((evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN))
        {
         try{
            int row =candidate_table.getSelectedRow();
            String t=(candidate_table.getModel().getValueAt(row,0).toString());
            String s="select * from master where id="+t ;
            Connection con = Connect.ConnectDB();
            pst = con.prepareStatement(s);
            rst=pst.executeQuery();
            if(rst.next())
            {
                String a=rst.getString("id");
                c_id.setText(a);
                String b=rst.getString("department");
                c_department.setSelectedItem(b);
                String c=rst.getString("sec");
                c_section.setSelectedItem(c);
                String d=rst.getString("year");
                c_year.setSelectedItem(d);
                String e=rst.getString("name");
                c_name.setText(e);
                String f=rst.getString("date_of_join");
                c_joined.setText(f);
               byte [] img =rst.getBytes("image");
               ImageIcon image=new ImageIcon (img);
               Image im=image.getImage();
               Image img2=im.getScaledInstance(lbl_image.getWidth(),lbl_image.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon img3=new ImageIcon (img2);
               lbl_image.setIcon(img3);
           
                
            }
        }
        catch(Exception ex)
        {
            
        }   
        }
    }//GEN-LAST:event_candidate_tableKeyPressed
//REFRESH RECORD
    private void update_table()
    {
        Connection con = Connect.ConnectDB();
        
       try
       {
           
           String sql="select id,name,department,sec,year,date_of_join from master";
           pst=con.prepareStatement(sql);
           rst=pst.executeQuery();
           candidate_table.setModel(DbUtils.resultSetToTableModel(rst));
       }
       catch(Exception e)
       {
        JOptionPane.showMessageDialog(null,e);   
       }
    }
    
  
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_delete;
    private javax.swing.JButton b_insert;
    private javax.swing.JButton b_logout;
    private javax.swing.JButton b_reset;
    private javax.swing.JButton b_update;
    private javax.swing.JComboBox<String> c_department;
    private javax.swing.JTextField c_id;
    private javax.swing.JTextField c_joined;
    private javax.swing.JTextField c_name;
    private javax.swing.JComboBox<String> c_section;
    private javax.swing.JComboBox<String> c_year;
    private javax.swing.JTable candidate_table;
    private javax.swing.JButton choose;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l_department;
    private javax.swing.JLabel l_id;
    private javax.swing.JLabel l_name;
    private javax.swing.JLabel l_section;
    private javax.swing.JLabel l_year;
    private javax.swing.JLabel lbl_image;
    private java.util.List<eyeopen.Master> masterList;
    private javax.persistence.Query masterQuery;
    // End of variables declaration//GEN-END:variables
}
